8. Write a program that asks the user for a number n and prints the sum of the numbers 1 to n. Use argparse.
9. Modify the previous program such that only multiples of three or five are considered in the sum, e.g. 3, 5, 6, 9, 10, 12, 15 for n=17
10. Write a program that asks the user for a number n and gives them the possibility to choose between computing the sum and computing the product of 1,â€¦,n. Use argparse.
11. Write a function that takes a list of strings an prints them, one per line, in a rectangular frame. For example the list ["Hello", "World", "in", "a", "frame"] gets printed as:
*********
* Hello *
* World *
* in    *
* a     *
* frame *
*********
Use adequate numpy functions to achieve this in efficient code.
12. Write a program, consisting of one main .py file and one help file. Let a user enter a string upon starting the program. Use help functions from your help file to convert the string to pig latin.
13. plot norm_dist data
14. split into train-test-val on sample dataset, use pathlib